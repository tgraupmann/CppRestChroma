/**
 * Chroma Rest API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */



#include "DeleteChromaSdkResponse.h"

namespace ChromaPackage {
namespace Model {

DeleteChromaSdkResponse::DeleteChromaSdkResponse()
{
    m_Result = 0;
    m_ResultIsSet = false;
    
}

DeleteChromaSdkResponse::~DeleteChromaSdkResponse()
{
}

void DeleteChromaSdkResponse::validate()
{
    // TODO: implement validation
}

web::json::value DeleteChromaSdkResponse::toJson() const
{
    web::json::value val = web::json::value::object();

    if(m_ResultIsSet)
    {
        val[U("result")] = ModelBase::toJson(m_Result);
    }
    

    return val;
}

void DeleteChromaSdkResponse::fromJson(web::json::value& val)
{
    if(val.has_field(U("result")))
    {
        setResult(ModelBase::int32_tFromJson(val[U("result")]));
    }
    
}

void DeleteChromaSdkResponse::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix[namePrefix.size() - 1] != U('.'))
    {
        namePrefix += U(".");
    }

    if(m_ResultIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + U("result"), m_Result));
    }
    
}

void DeleteChromaSdkResponse::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix[namePrefix.size() - 1] != U('.'))
    {
        namePrefix += U(".");
    }

    if(multipart->hasContent(U("result")))
    {
        setResult(ModelBase::int32_tFromHttpContent(multipart->getContent(U("result"))));
    }
    
}


int32_t DeleteChromaSdkResponse::getResult() const
{
    return m_Result;
}
void DeleteChromaSdkResponse::setResult(int32_t value)
{
    m_Result = value;
    m_ResultIsSet = true;
}
bool DeleteChromaSdkResponse::resultIsSet() const
{
    return m_ResultIsSet;
}
void DeleteChromaSdkResponse::unsetResult()
{
    m_ResultIsSet = false;
}

}
}

